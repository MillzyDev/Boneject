using System.Diagnostics;
using System.Text;
using Microsoft.CodeAnalysis;

namespace Boneject.CodeGen
{
    [Generator]
    public class BuildInfoGenerator : ISourceGenerator
    {
        public void Initialize(GeneratorInitializationContext context)
        {
#if DEBUG
            Debugger.Launch();
#endif
        }

        public void Execute(GeneratorExecutionContext context)
        {
            var name = context.GetMSBuildProperty("ModName");
            var version = context.GetMSBuildProperty("ModVersion", "0.0.0.*");
            var semVersion = context.GetMSBuildProperty("ModSemanticVersion", "0.0.0");
            var author = context.GetMSBuildProperty("ModAuthor");
            var downloadLink = context.GetMSBuildProperty("ModDownloadLink");
            var id = context.GetMSBuildProperty("ModId");
            var melonLoaderVersion = context.GetMSBuildProperty("MelonLoaderVersion");

            var sourceBuilder = new StringBuilder();
            sourceBuilder.AppendLine("// <auto-generated/>");
            sourceBuilder.AppendLine();
            sourceBuilder.AppendLine("namespace Boneject {");
            sourceBuilder.AppendLine("    public static class BuildInfo {");
            sourceBuilder.AppendLine($"        public const string name = \"{name}\";");
            sourceBuilder.AppendLine($"        public const string version = \"{version}\";");
            sourceBuilder.AppendLine($"        public const string semVersion = \"{semVersion}\";");
            sourceBuilder.AppendLine($"        public const string author = \"{author}\";");
            sourceBuilder.AppendLine($"        public const string downloadLink = \"{downloadLink}\";");
            sourceBuilder.AppendLine($"        public const string id = \"{id}\";");
            sourceBuilder.AppendLine($"        public const string melonLoaderVersion = \"{melonLoaderVersion}\";");
            sourceBuilder.AppendLine("    }");
            sourceBuilder.AppendLine("}");
            sourceBuilder.AppendLine();
            
            var source = sourceBuilder.ToString();
            context.AddSource("BuildInfo.g.cs", source);
        }
    }
}